{"map":"{\"version\":3,\"sources\":[\"D:/Assignment/stock-market-dashboard/src/App.js\",\"D:/Assignment/stock-market-dashboard/src/index.js\"],\"names\":[\"ChartJS\",\"register\",\"CategoryScale\",\"LinearScale\",\"PointElement\",\"LineElement\",\"Title\",\"Tooltip\",\"Legend\",\"API_KEY\",\"API_BASE_URL\",\"App\",\"darkMode\",\"setDarkMode\",\"useState\",\"symbol\",\"setSymbol\",\"startDate\",\"setStartDate\",\"Date\",\"now\",\"endDate\",\"setEndDate\",\"stocks\",\"setStocks\",\"chartData\",\"setChartData\",\"labels\",\"datasets\",\"chartRef\",\"useRef\",\"useEffect\",\"document\",\"body\",\"classList\",\"toggle\",\"updateChartData\",\"_stocks$\",\"newChartData\",\"data\",\"map\",\"d\",\"date\",\"flatMap\",\"stock\",\"index\",\"label\",\"price\",\"borderColor\",\"backgroundColor\",\"yAxisID\",\"tension\",\"volume\",\"chartOptions\",\"responsive\",\"animation\",\"duration\",\"easing\",\"animations\",\"x\",\"type\",\"from\",\"NaN\",\"delay\",\"ctx\",\"xStarted\",\"y\",\"yStarted\",\"scales\",\"title\",\"display\",\"text\",\"color\",\"ticks\",\"grid\",\"position\",\"y1\",\"drawOnChartArea\",\"plugins\",\"legend\",\"tooltip\",\"titleColor\",\"bodyColor\",\"React\",\"createElement\",\"className\",\"onSubmit\",\"e\",\"preventDefault\",\"find\",\"s\",\"async\",\"timeSeries\",\"axios\",\"get\",\"params\",\"function\",\"apikey\",\"stockData\",\"Object\",\"entries\",\"filter\",\"_ref\",\"_ref2\",\"values\",\"parseFloat\",\"parseInt\",\"reverse\",\"prevStocks\",\"error\",\"console\",\"fetchStockData\",\"value\",\"onChange\",\"target\",\"toUpperCase\",\"placeholder\",\"DatePicker\",\"selected\",\"Line\",\"ref\",\"options\",\"key\",\"length\",\"latestData\",\"previousData\",\"change\",\"changePercent\",\"toFixed\",\"toLocaleString\",\"onClick\",\"symbolToRemove\",\"handleRemoveStock\",\"ReactDOM\",\"createRoot\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"mMAQAA,EAAAA,EAAQC,SAASC,EAAAA,EAAeC,EAAAA,EAAaC,EAAAA,EAAcC,EAAAA,EAAaC,EAAAA,EAAOC,EAAAA,EAASC,EAAAA,GAExF,MAAMC,EAAU,kBACVC,EAAe,oCAiPNC,IAAAA,EA/Of,WACE,MAAOC,EAAUC,GAAeC,OAAAA,EAAAA,SAAAA,EAAS,IAClCC,EAAQC,GAAaF,OAAAA,EAAAA,SAAAA,CAAS,KAC9BG,EAAWC,GAAgBJ,OAAAA,EAAAA,SAAAA,CAAS,IAAIK,KAAKA,KAAKC,MAAQ,UAC1DC,EAASC,GAAcR,OAAAA,EAAAA,SAAAA,CAAS,IAAIK,OACpCI,EAAQC,GAAaV,OAAAA,EAAAA,SAAAA,CAAS,KAC9BW,EAAWC,GAAgBZ,OAAAA,EAAAA,SAAAA,CAAS,CAAEa,OAAQ,GAAIC,SAAU,KAC7DC,EAAWC,OAAAA,EAAAA,OAAAA,CAAO,MAExBC,OAAAA,EAAAA,UAAAA,CAAU,KACRC,SAASC,KAAKC,UAAUC,OAAO,YAAavB,GAC5CwB,KACC,CAACxB,EAAUW,IAEd,MAyBMa,EAAkBA,KAAM,IAAAC,EAC5B,MAAMC,EAAe,CACnBX,QAAiB,QAATU,EAAAd,EAAO,UAAE,IAAAc,OAAA,EAATA,EAAWE,KAAKC,IAAIC,GAAKA,EAAEC,QAAS,GAC5Cd,SAAUL,EAAOoB,QAAQ,CAACC,EAAOC,IAAU,CACzC,CACEC,SAAUF,EAAM7B,eAChBwB,KAAMK,EAAML,KAAKC,IAAIC,GAAKA,EAAEM,OAC5BC,mBAA4B,MAARH,eACpBI,wBAAiC,MAARJ,oBACzBK,QAAS,IACTC,QAAS,IAEX,CACEL,SAAUF,EAAM7B,gBAChBwB,KAAMK,EAAML,KAAKC,IAAIC,GAAKA,EAAEW,QAC5BJ,mBAA4B,MAARH,EAAgB,gBACpCI,wBAAiC,MAARJ,EAAgB,qBACzCK,QAAS,KACTC,QAAS,OAIfzB,EAAaY,IAeTe,EAAe,CACnBC,YAAY,EACZC,UAAW,CACTC,SAAU,IACVC,OAAQ,iBAEVC,WAAY,CACVC,EAAG,CACDC,KAAM,SACNH,OAAQ,SACRD,SAAU,IACVK,KAAMC,IACNC,MAAMC,GACa,SAAbA,EAAIJ,MAAmBI,EAAIC,SACtB,GAETD,EAAIC,UAAW,EACI,GAAZD,EAAInB,QAGfqB,EAAG,CACDN,KAAM,SACNH,OAAQ,SACRD,SAAU,IACVO,MAAMC,GACa,SAAbA,EAAIJ,MAAmBI,EAAIG,SACtB,GAETH,EAAIG,UAAW,EACI,GAAZH,EAAInB,SAIjBuB,OAAQ,CACNT,EAAG,CACDU,MAAO,CACLC,SAAS,EACTC,KAAM,OACNC,MAAO5D,EAAW,QAAU,SAE9B6D,MAAO,CACLD,MAAO5D,EAAW,QAAU,SAE9B8D,KAAM,CACJF,MAAO5D,EAAW,2BAA6B,uBAGnDsD,EAAG,CACDN,KAAM,SACNU,SAAS,EACTK,SAAU,OACVN,MAAO,CACLC,SAAS,EACTC,KAAM,YACNC,MAAO5D,EAAW,QAAU,SAE9B6D,MAAO,CACLD,MAAO5D,EAAW,QAAU,SAE9B8D,KAAM,CACJF,MAAO5D,EAAW,2BAA6B,uBAGnDgE,GAAI,CACFhB,KAAM,SACNU,SAAS,EACTK,SAAU,QACVN,MAAO,CACLC,SAAS,EACTC,KAAM,SACNC,MAAO5D,EAAW,QAAU,SAE9B6D,MAAO,CACLD,MAAO5D,EAAW,QAAU,SAE9B8D,KAAM,CACJG,iBAAiB,EACjBL,MAAO5D,EAAW,2BAA6B,wBAIrDkE,QAAS,CACPC,OAAQ,CACNpD,OAAQ,CACN6C,MAAO5D,EAAW,QAAU,UAGhCoE,QAAS,CACP/B,gBAAiBrC,EAAW,qBAAuB,2BACnDqE,WAAYrE,EAAW,QAAU,QACjCsE,UAAWtE,EAAW,QAAU,WAKtC,OACEuE,EAAAA,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbF,EAAAA,EAAAC,cAAA,SAAA,KACED,EAAAA,EAAAC,cAAA,KAAA,KAAI,2BAGND,EAAAA,EAAAC,cAAA,OAAA,KACED,EAAAA,EAAAC,cAAA,OAAA,CAAME,SAlHYC,IACtBA,EAAEC,iBACEzE,IAAWQ,EAAOkE,KAAKC,GAAKA,EAAE3E,SAAWA,KApDxB4E,WACrB,IACE,MAOMC,SAPiBC,EAAAA,EAAMC,IAAIpF,EAAc,CAC7CqF,OAAQ,CACNC,SAAU,oBACVjF,OAAQA,EACRkF,OAAQxF,MAGgB8B,KAAK,uBAC3B2D,EAAYC,OAAOC,QAAQR,GAC9BS,OAAOC,IAAA,IAAE5D,GAAK4D,EAAA,OAAK,IAAInF,KAAKuB,IAASzB,GAAa,IAAIE,KAAKuB,IAASrB,IACpEmB,IAAI+D,IAAA,IAAE7D,EAAM8D,GAAOD,EAAA,MAAM,CACxB7D,KAAAA,EACAK,MAAO0D,WAAWD,EAAO,aACzBpD,OAAQsD,SAASF,EAAO,iBAEzBG,UAEHnF,EAAUoF,GAAc,IAAIA,EAAY,CAAE7F,OAAAA,EAAQwB,KAAM2D,KACxD,MAAOW,GACPC,QAAQD,MAAM,6BAA8BA,KAgC5CE,GACA/F,EAAU,MA8GwBqE,UAAU,YACxCF,EAAAA,EAAAC,cAAA,QAAA,CACExB,KAAK,OACLoD,MAAOjG,EACPkG,SAAW1B,GAAMvE,EAAUuE,EAAE2B,OAAOF,MAAMG,eAC1CC,YAAY,oCAEdjC,EAAAA,EAAAC,cAAA,MAAA,CAAKC,UAAU,eACbF,EAAAA,EAAAC,cAAA,QAAA,KAAO,eACPD,EAAAA,EAAAC,cAACiC,EAAAA,EAAU,CAACC,SAAUrG,EAAWgG,SAAUvE,GAAQxB,EAAawB,MAElEyC,EAAAA,EAAAC,cAAA,MAAA,CAAKC,UAAU,eACbF,EAAAA,EAAAC,cAAA,QAAA,KAAO,aACPD,EAAAA,EAAAC,cAACiC,EAAAA,EAAU,CAACC,SAAUjG,EAAS4F,SAAUvE,GAAQpB,EAAWoB,MAE9DyC,EAAAA,EAAAC,cAAA,SAAA,CAAQxB,KAAK,UAAS,cAExBuB,EAAAA,EAAAC,cAAA,MAAA,CAAKC,UAAU,mBACbF,EAAAA,EAAAC,cAACmC,EAAAA,EAAI,CAACC,IAAK3F,EAAUU,KAAMd,EAAWgG,QAASpE,EAAcqE,IAAKnG,EAAOoG,UAE3ExC,EAAAA,EAAAC,cAAA,QAAA,CAAOC,UAAU,eACfF,EAAAA,EAAAC,cAAA,QAAA,KACED,EAAAA,EAAAC,cAAA,KAAA,KACED,EAAAA,EAAAC,cAAA,KAAA,KAAI,UACJD,EAAAA,EAAAC,cAAA,KAAA,KAAI,gBACJD,EAAAA,EAAAC,cAAA,KAAA,KAAI,UACJD,EAAAA,EAAAC,cAAA,KAAA,KAAI,kBACJD,EAAAA,EAAAC,cAAA,KAAA,KAAI,UACJD,EAAAA,EAAAC,cAAA,KAAA,KAAI,YAGRD,EAAAA,EAAAC,cAAA,QAAA,KACG7D,EAAOiB,IAAII,IACV,MAAMgF,EAAahF,EAAML,KAAKK,EAAML,KAAKoF,OAAS,GAC5CE,EAAejF,EAAML,KAAKK,EAAML,KAAKoF,OAAS,GAC9CG,EAASF,EAAW7E,MAAQ8E,EAAa9E,MACzCgF,EAAiBD,EAASD,EAAa9E,MAAS,IACtD,OACEoC,EAAAA,EAAAC,cAAA,KAAA,CAAIsC,IAAK9E,EAAM7B,QACboE,EAAAA,EAAAC,cAAA,KAAA,KAAKxC,EAAM7B,QACXoE,EAAAA,EAAAC,cAAA,KAAA,KAAI,IAAEwC,EAAW7E,MAAMiF,QAAQ,IAC/B7C,EAAAA,EAAAC,cAAA,KAAA,CAAIC,UAAWyC,GAAU,EAAI,WAAa,YACvCA,EAAOE,QAAQ,IAElB7C,EAAAA,EAAAC,cAAA,KAAA,CAAIC,UAAWyC,GAAU,EAAI,WAAa,YACvCC,EAAcC,QAAQ,GAAG,KAE5B7C,EAAAA,EAAAC,cAAA,KAAA,KAAKwC,EAAWxE,OAAO6E,kBACvB9C,EAAAA,EAAAC,cAAA,KAAA,KACED,EAAAA,EAAAC,cAAA,SAAA,CAAQ8C,QAASA,IA3JRC,CAAAA,IACzB3G,EAAUoF,GAAcA,EAAWP,OAAOX,GAAKA,EAAE3E,SAAWoH,KA0JrBC,CAAkBxF,EAAM7B,SAAS,mBC3O/DsH,EAAAA,EAASC,WAAWtG,SAASuG,eAAe,SACpDC,OACHrD,EAAAA,EAAAC,cAACD,EAAAA,EAAMsD,WAAU,KACftD,EAAAA,EAAAC,cAACzE,EAAG\",\"sourcesContent\":[\"import React, { useState, useEffect, useRef } from 'react';\\r\\nimport axios from 'axios';\\r\\nimport DatePicker from 'react-datepicker';\\r\\nimport { Line } from 'react-chartjs-2';\\r\\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\\r\\nimport 'react-datepicker/dist/react-datepicker.css';\\r\\nimport './App.css';\\r\\n\\r\\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\\r\\n\\r\\nconst API_KEY = '3ZM7KLC6GXCWKKH';\\r\\nconst API_BASE_URL = 'https://www.alphavantage.co/query';\\r\\n\\r\\nfunction App() {\\r\\n  const [darkMode, setDarkMode] = useState(false);\\r\\n  const [symbol, setSymbol] = useState('');\\r\\n  const [startDate, setStartDate] = useState(new Date(Date.now() - 30 * 24 * 60 * 60 * 1000));\\r\\n  const [endDate, setEndDate] = useState(new Date());\\r\\n  const [stocks, setStocks] = useState([]);\\r\\n  const [chartData, setChartData] = useState({ labels: [], datasets: [] });\\r\\n  const chartRef = useRef(null);\\r\\n\\r\\n  useEffect(() => {\\r\\n    document.body.classList.toggle('dark-mode', darkMode);\\r\\n    updateChartData();\\r\\n  }, [darkMode, stocks]);\\r\\n\\r\\n  const fetchStockData = async () => {\\r\\n    try {\\r\\n      const response = await axios.get(API_BASE_URL, {\\r\\n        params: {\\r\\n          function: 'TIME_SERIES_DAILY',\\r\\n          symbol: symbol,\\r\\n          apikey: API_KEY,\\r\\n        },\\r\\n      });\\r\\n      const timeSeries = response.data['Time Series (Daily)'];\\r\\n      const stockData = Object.entries(timeSeries)\\r\\n        .filter(([date]) => new Date(date) >= startDate && new Date(date) <= endDate)\\r\\n        .map(([date, values]) => ({\\r\\n          date,\\r\\n          price: parseFloat(values['4. close']),\\r\\n          volume: parseInt(values['5. volume']),\\r\\n        }))\\r\\n        .reverse();\\r\\n\\r\\n      setStocks(prevStocks => [...prevStocks, { symbol, data: stockData }]);\\r\\n    } catch (error) {\\r\\n      console.error('Error fetching stock data:', error);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  const updateChartData = () => {\\r\\n    const newChartData = {\\r\\n      labels: stocks[0]?.data.map(d => d.date) || [],\\r\\n      datasets: stocks.flatMap((stock, index) => [\\r\\n        {\\r\\n          label: `${stock.symbol} Price`,\\r\\n          data: stock.data.map(d => d.price),\\r\\n          borderColor: `hsl(${index * 137.5}, 70%, 50%)`,\\r\\n          backgroundColor: `hsla(${index * 137.5}, 70%, 50%, 0.5)`,\\r\\n          yAxisID: 'y',\\r\\n          tension: 0.1,\\r\\n        },\\r\\n        {\\r\\n          label: `${stock.symbol} Volume`,\\r\\n          data: stock.data.map(d => d.volume),\\r\\n          borderColor: `hsl(${index * 137.5 + 60}, 70%, 50%)`,\\r\\n          backgroundColor: `hsla(${index * 137.5 + 60}, 70%, 50%, 0.5)`,\\r\\n          yAxisID: 'y1',\\r\\n          tension: 0.1,\\r\\n        }\\r\\n      ]),\\r\\n    };\\r\\n    setChartData(newChartData);\\r\\n  };\\r\\n\\r\\n  const handleAddStock = (e) => {\\r\\n    e.preventDefault();\\r\\n    if (symbol && !stocks.find(s => s.symbol === symbol)) {\\r\\n      fetchStockData();\\r\\n      setSymbol('');\\r\\n    }\\r\\n  };\\r\\n\\r\\n  const handleRemoveStock = (symbolToRemove) => {\\r\\n    setStocks(prevStocks => prevStocks.filter(s => s.symbol !== symbolToRemove));\\r\\n  };\\r\\n\\r\\n  const chartOptions = {\\r\\n    responsive: true,\\r\\n    animation: {\\r\\n      duration: 1000,\\r\\n      easing: 'easeInOutQuad',\\r\\n    },\\r\\n    animations: {\\r\\n      x: {\\r\\n        type: 'number',\\r\\n        easing: 'linear',\\r\\n        duration: 1000,\\r\\n        from: NaN,\\r\\n        delay(ctx) {\\r\\n          if (ctx.type !== 'data' || ctx.xStarted) {\\r\\n            return 0;\\r\\n          }\\r\\n          ctx.xStarted = true;\\r\\n          return ctx.index * 10;\\r\\n        }\\r\\n      },\\r\\n      y: {\\r\\n        type: 'number',\\r\\n        easing: 'linear',\\r\\n        duration: 1000,\\r\\n        delay(ctx) {\\r\\n          if (ctx.type !== 'data' || ctx.yStarted) {\\r\\n            return 0;\\r\\n          }\\r\\n          ctx.yStarted = true;\\r\\n          return ctx.index * 10;\\r\\n        }\\r\\n      }\\r\\n    },\\r\\n    scales: {\\r\\n      x: {\\r\\n        title: {\\r\\n          display: true,\\r\\n          text: 'Date',\\r\\n          color: darkMode ? 'white' : 'black'\\r\\n        },\\r\\n        ticks: {\\r\\n          color: darkMode ? 'white' : 'black'\\r\\n        },\\r\\n        grid: {\\r\\n          color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'\\r\\n        }\\r\\n      },\\r\\n      y: {\\r\\n        type: 'linear',\\r\\n        display: true,\\r\\n        position: 'left',\\r\\n        title: {\\r\\n          display: true,\\r\\n          text: 'Price ($)',\\r\\n          color: darkMode ? 'white' : 'black'\\r\\n        },\\r\\n        ticks: {\\r\\n          color: darkMode ? 'white' : 'black'\\r\\n        },\\r\\n        grid: {\\r\\n          color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'\\r\\n        }\\r\\n      },\\r\\n      y1: {\\r\\n        type: 'linear',\\r\\n        display: true,\\r\\n        position: 'right',\\r\\n        title: {\\r\\n          display: true,\\r\\n          text: 'Volume',\\r\\n          color: darkMode ? 'white' : 'black'\\r\\n        },\\r\\n        ticks: {\\r\\n          color: darkMode ? 'white' : 'black'\\r\\n        },\\r\\n        grid: {\\r\\n          drawOnChartArea: false,\\r\\n          color: darkMode ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)'\\r\\n        },\\r\\n      },\\r\\n    },\\r\\n    plugins: {\\r\\n      legend: {\\r\\n        labels: {\\r\\n          color: darkMode ? 'white' : 'black'\\r\\n        }\\r\\n      },\\r\\n      tooltip: {\\r\\n        backgroundColor: darkMode ? 'rgba(0, 0, 0, 0.7)' : 'rgba(255, 255, 255, 0.7)',\\r\\n        titleColor: darkMode ? 'white' : 'black',\\r\\n        bodyColor: darkMode ? 'white' : 'black'\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div className=\\\"App\\\">\\r\\n      <header>\\r\\n        <h1>Stock Market Dashboard</h1>\\r\\n       \\r\\n      </header>\\r\\n      <main>\\r\\n        <form onSubmit={handleAddStock} className=\\\"controls\\\">\\r\\n          <input\\r\\n            type=\\\"text\\\"\\r\\n            value={symbol}\\r\\n            onChange={(e) => setSymbol(e.target.value.toUpperCase())}\\r\\n            placeholder=\\\"Enter stock symbol (e.g., AAPL)\\\"\\r\\n          />\\r\\n          <div className=\\\"date-picker\\\">\\r\\n            <label>Start Date:</label>\\r\\n            <DatePicker selected={startDate} onChange={date => setStartDate(date)} />\\r\\n          </div>\\r\\n          <div className=\\\"date-picker\\\">\\r\\n            <label>End Date:</label>\\r\\n            <DatePicker selected={endDate} onChange={date => setEndDate(date)} />\\r\\n          </div>\\r\\n          <button type=\\\"submit\\\">Add Stock</button>\\r\\n        </form>\\r\\n        <div className=\\\"chart-container\\\">\\r\\n          <Line ref={chartRef} data={chartData} options={chartOptions} key={stocks.length} />\\r\\n        </div>\\r\\n        <table className=\\\"stock-table\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>Symbol</th>\\r\\n              <th>Latest Price</th>\\r\\n              <th>Change</th>\\r\\n              <th>Change Percent</th>\\r\\n              <th>Volume</th>\\r\\n              <th>Action</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            {stocks.map(stock => {\\r\\n              const latestData = stock.data[stock.data.length - 1];\\r\\n              const previousData = stock.data[stock.data.length - 2];\\r\\n              const change = latestData.price - previousData.price;\\r\\n              const changePercent = (change / previousData.price) * 100;\\r\\n              return (\\r\\n                <tr key={stock.symbol}>\\r\\n                  <td>{stock.symbol}</td>\\r\\n                  <td>${latestData.price.toFixed(2)}</td>\\r\\n                  <td className={change >= 0 ? 'positive' : 'negative'}>\\r\\n                    {change.toFixed(2)}\\r\\n                  </td>\\r\\n                  <td className={change >= 0 ? 'positive' : 'negative'}>\\r\\n                    {changePercent.toFixed(2)}%\\r\\n                  </td>\\r\\n                  <td>{latestData.volume.toLocaleString()}</td>\\r\\n                  <td>\\r\\n                    <button onClick={() => handleRemoveStock(stock.symbol)}>Remove</button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              );\\r\\n            })}\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </main>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default App;\",\"import React from 'react';\\r\\nimport ReactDOM from 'react-dom/client';\\r\\nimport './index.css';\\r\\nimport App from './App';\\r\\n\\r\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\r\\nroot.render(\\r\\n  <React.StrictMode>\\r\\n    <App />\\r\\n  </React.StrictMode>\\r\\n);\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{111:function(e,t,a){\"use strict\";a.r(t);var l=a(3),n=a.n(l),r=a(41),o=a.n(r),c=(a(53),a(114)),i=a(38),s=a.n(i),d=a(44),m=a(6);a(54),a(55);m.d.register(m.c,m.i,m.k,m.h,m.o,m.p,m.f);const u=\"3ZM7KLC6GXCWKKH\",b=\"https://www.alphavantage.co/query\";var p=function(){const[e,t]=Object(l.useState)(!1),[a,r]=Object(l.useState)(\"\"),[o,i]=Object(l.useState)(new Date(Date.now()-2592e6)),[m,p]=Object(l.useState)(new Date),[y,E]=Object(l.useState)([]),[h,g]=Object(l.useState)({labels:[],datasets:[]}),k=Object(l.useRef)(null);Object(l.useEffect)(()=>{document.body.classList.toggle(\"dark-mode\",e),w()},[e,y]);const w=()=>{var e;const t={labels:(null===(e=y[0])||void 0===e?void 0:e.data.map(e=>e.date))||[],datasets:y.flatMap((e,t)=>[{label:`${e.symbol} Price`,data:e.data.map(e=>e.price),borderColor:`hsl(${137.5*t}, 70%, 50%)`,backgroundColor:`hsla(${137.5*t}, 70%, 50%, 0.5)`,yAxisID:\"y\",tension:.1},{label:`${e.symbol} Volume`,data:e.data.map(e=>e.volume),borderColor:`hsl(${137.5*t+60}, 70%, 50%)`,backgroundColor:`hsla(${137.5*t+60}, 70%, 50%, 0.5)`,yAxisID:\"y1\",tension:.1}])};g(t)},v={responsive:!0,animation:{duration:1e3,easing:\"easeInOutQuad\"},animations:{x:{type:\"number\",easing:\"linear\",duration:1e3,from:NaN,delay:e=>\"data\"!==e.type||e.xStarted?0:(e.xStarted=!0,10*e.index)},y:{type:\"number\",easing:\"linear\",duration:1e3,delay:e=>\"data\"!==e.type||e.yStarted?0:(e.yStarted=!0,10*e.index)}},scales:{x:{title:{display:!0,text:\"Date\",color:e?\"white\":\"black\"},ticks:{color:e?\"white\":\"black\"},grid:{color:e?\"rgba(255, 255, 255, 0.1)\":\"rgba(0, 0, 0, 0.1)\"}},y:{type:\"linear\",display:!0,position:\"left\",title:{display:!0,text:\"Price ($)\",color:e?\"white\":\"black\"},ticks:{color:e?\"white\":\"black\"},grid:{color:e?\"rgba(255, 255, 255, 0.1)\":\"rgba(0, 0, 0, 0.1)\"}},y1:{type:\"linear\",display:!0,position:\"right\",title:{display:!0,text:\"Volume\",color:e?\"white\":\"black\"},ticks:{color:e?\"white\":\"black\"},grid:{drawOnChartArea:!1,color:e?\"rgba(255, 255, 255, 0.1)\":\"rgba(0, 0, 0, 0.1)\"}}},plugins:{legend:{labels:{color:e?\"white\":\"black\"}},tooltip:{backgroundColor:e?\"rgba(0, 0, 0, 0.7)\":\"rgba(255, 255, 255, 0.7)\",titleColor:e?\"white\":\"black\",bodyColor:e?\"white\":\"black\"}}};return n.a.createElement(\"div\",{className:\"App\"},n.a.createElement(\"header\",null,n.a.createElement(\"h1\",null,\"Stock Market Dashboard\")),n.a.createElement(\"main\",null,n.a.createElement(\"form\",{onSubmit:e=>{e.preventDefault(),a&&!y.find(e=>e.symbol===a)&&((async()=>{try{const t=(await c.a.get(b,{params:{function:\"TIME_SERIES_DAILY\",symbol:a,apikey:u}})).data[\"Time Series (Daily)\"],l=Object.entries(t).filter(e=>{let[t]=e;return new Date(t)>=o&&new Date(t)<=m}).map(e=>{let[t,a]=e;return{date:t,price:parseFloat(a[\"4. close\"]),volume:parseInt(a[\"5. volume\"])}}).reverse();E(e=>[...e,{symbol:a,data:l}])}catch(e){console.error(\"Error fetching stock data:\",e)}})(),r(\"\"))},className:\"controls\"},n.a.createElement(\"input\",{type:\"text\",value:a,onChange:e=>r(e.target.value.toUpperCase()),placeholder:\"Enter stock symbol (e.g., AAPL)\"}),n.a.createElement(\"div\",{className:\"date-picker\"},n.a.createElement(\"label\",null,\"Start Date:\"),n.a.createElement(s.a,{selected:o,onChange:e=>i(e)})),n.a.createElement(\"div\",{className:\"date-picker\"},n.a.createElement(\"label\",null,\"End Date:\"),n.a.createElement(s.a,{selected:m,onChange:e=>p(e)})),n.a.createElement(\"button\",{type:\"submit\"},\"Add Stock\")),n.a.createElement(\"div\",{className:\"chart-container\"},n.a.createElement(d.a,{ref:k,data:h,options:v,key:y.length})),n.a.createElement(\"table\",{className:\"stock-table\"},n.a.createElement(\"thead\",null,n.a.createElement(\"tr\",null,n.a.createElement(\"th\",null,\"Symbol\"),n.a.createElement(\"th\",null,\"Latest Price\"),n.a.createElement(\"th\",null,\"Change\"),n.a.createElement(\"th\",null,\"Change Percent\"),n.a.createElement(\"th\",null,\"Volume\"),n.a.createElement(\"th\",null,\"Action\"))),n.a.createElement(\"tbody\",null,y.map(e=>{const t=e.data[e.data.length-1],a=e.data[e.data.length-2],l=t.price-a.price,r=l/a.price*100;return n.a.createElement(\"tr\",{key:e.symbol},n.a.createElement(\"td\",null,e.symbol),n.a.createElement(\"td\",null,\"$\",t.price.toFixed(2)),n.a.createElement(\"td\",{className:l>=0?\"positive\":\"negative\"},l.toFixed(2)),n.a.createElement(\"td\",{className:l>=0?\"positive\":\"negative\"},r.toFixed(2),\"%\"),n.a.createElement(\"td\",null,t.volume.toLocaleString()),n.a.createElement(\"td\",null,n.a.createElement(\"button\",{onClick:()=>(e=>{E(t=>t.filter(t=>t.symbol!==e))})(e.symbol)},\"Remove\")))})))))};o.a.createRoot(document.getElementById(\"root\")).render(n.a.createElement(n.a.StrictMode,null,n.a.createElement(p,null)))},47:function(e,t,a){e.exports=a(111)},53:function(e,t,a){},55:function(e,t,a){}},[[47,1,2]]]);","extractedComments":[]}